unit uPSI_MessagesLog;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_MessagesLog = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TMessagesLog(CL: TPSPascalCompiler);
procedure SIRegister_MessagesLog(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TMessagesLog(CL: TPSRuntimeClassImporter);
procedure RIRegister_MessagesLog(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   NovusLog
  ,uPSUtils
  ,Project
  ,MessagesLog
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_MessagesLog]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TMessagesLog(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TNovusLogFile', 'TMessagesLog') do
  with CL.AddClassN(CL.FindClass('TNovusLogFile'),'TMessagesLog') do
  begin
    RegisterMethod('Constructor Create( AFilename : String; aOutputConsole : Boolean)');
    RegisterMethod('Procedure Log( AMsg : string)');
    RegisterMethod('Procedure LogError');
    RegisterMethod('Procedure InternalError');
    RegisterProperty('projecttask', 'Tprojecttask', iptrw);
    RegisterProperty('LastExError', 'TPSError', iptrw);
    RegisterProperty('LastExParam', 'tbtstring', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_MessagesLog(CL: TPSPascalCompiler);
begin
  SIRegister_TMessagesLog(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TMessagesLogLastExParam_W(Self: TMessagesLog; const T: tbtstring);
begin Self.LastExParam := T; end;

(*----------------------------------------------------------------------------*)
procedure TMessagesLogLastExParam_R(Self: TMessagesLog; var T: tbtstring);
begin T := Self.LastExParam; end;

(*----------------------------------------------------------------------------*)
procedure TMessagesLogLastExError_W(Self: TMessagesLog; const T: TPSError);
begin Self.LastExError := T; end;

(*----------------------------------------------------------------------------*)
procedure TMessagesLogLastExError_R(Self: TMessagesLog; var T: TPSError);
begin T := Self.LastExError; end;

(*----------------------------------------------------------------------------*)
procedure TMessagesLogprojecttask_W(Self: TMessagesLog; const T: Tprojecttask);
begin Self.projecttask := T; end;

(*----------------------------------------------------------------------------*)
procedure TMessagesLogprojecttask_R(Self: TMessagesLog; var T: Tprojecttask);
begin T := Self.projecttask; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TMessagesLog(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TMessagesLog) do
  begin
    RegisterVirtualConstructor(@TMessagesLog.Create, 'Create');
    RegisterMethod(@TMessagesLog.Log, 'Log');
    RegisterMethod(@TMessagesLog.LogError, 'LogError');
    RegisterMethod(@TMessagesLog.InternalError, 'InternalError');
    RegisterPropertyHelper(@TMessagesLogprojecttask_R,@TMessagesLogprojecttask_W,'projecttask');
    RegisterPropertyHelper(@TMessagesLogLastExError_R,@TMessagesLogLastExError_W,'LastExError');
    RegisterPropertyHelper(@TMessagesLogLastExParam_R,@TMessagesLogLastExParam_W,'LastExParam');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_MessagesLog(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TMessagesLog(CL);
end;

 
 
{ TPSImport_MessagesLog }
(*----------------------------------------------------------------------------*)
procedure TPSImport_MessagesLog.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_MessagesLog(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_MessagesLog.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_MessagesLog(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
