unit uPSI_API_RegEx;

{
  This file has been generated by UnitParser v0.7, written by M. Knight
  and updated by NP. v/d Spek and George Birbilis.
  Source Code from Carlo Kok has been used to implement various sections of
  UnitParser. Components of ROPS are used in the construction of UnitParser,
  code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface

uses
  SysUtils, Classes, uPSComponent, uPSRuntime, uPSCompiler;

type
  (* ---------------------------------------------------------------------------- *)
  TPSImport_API_RegEx = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript;
      const ri: TPSRuntimeClassImporter); override;
  end;

  { compile-time registration functions }
procedure SIRegister_TAPI_RegEx(CL: TPSPascalCompiler);
procedure SIRegister_API_RegEx(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TAPI_RegEx(CL: TPSRuntimeClassImporter);
procedure RIRegister_API_RegEx(CL: TPSRuntimeClassImporter);

procedure Register;

implementation

uses
  APIBase, API_Output, RegularExpressions, API_RegEx;

procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_API_RegEx]);
end;

(* === compile-time registration functions === *)
(* ---------------------------------------------------------------------------- *)
procedure SIRegister_TAPI_RegEx(CL: TPSPascalCompiler);
begin
  // with RegClassS(CL,'TAPIBase', 'TAPI_RegEx') do
  with CL.AddClassN(CL.FindClass('TAPIBase'), 'TAPI_RegEx') do
  begin
    RegisterMethod
      ('Function Match( aRegEx : String; aText : String; var aMatching : String) : boolean');
  end;
end;

(* ---------------------------------------------------------------------------- *)
procedure SIRegister_API_RegEx(CL: TPSPascalCompiler);
begin
  SIRegister_TAPI_RegEx(CL);
end;

(* === run-time registration functions === *)
(* ---------------------------------------------------------------------------- *)
procedure RIRegister_TAPI_RegEx(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TAPI_RegEx) do
  begin
    RegisterMethod(@TAPI_RegEx.Match, 'Match');
  end;
end;

(* ---------------------------------------------------------------------------- *)
procedure RIRegister_API_RegEx(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TAPI_RegEx(CL);
end;

{ TPSImport_API_RegEx }
(* ---------------------------------------------------------------------------- *)
procedure TPSImport_API_RegEx.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_API_RegEx(CompExec.Comp);
end;

(* ---------------------------------------------------------------------------- *)
procedure TPSImport_API_RegEx.ExecImport1(CompExec: TPSScript;
  const ri: TPSRuntimeClassImporter);
begin
  RIRegister_API_RegEx(ri);
end;
(* ---------------------------------------------------------------------------- *)

end.
