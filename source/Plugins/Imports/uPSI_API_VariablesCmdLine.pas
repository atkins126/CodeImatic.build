unit uPSI_API_VariablesCmdLine;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_API_VariablesCmdLine = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TAPI_VariablesCmdLine(CL: TPSPascalCompiler);
procedure SIRegister_API_VariablesCmdLine(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TAPI_VariablesCmdLine(CL: TPSRuntimeClassImporter);
procedure RIRegister_API_VariablesCmdLine(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   APIBase
  ,API_Output
  ,NovusFileUtils
  ,VariablesCmdLine
  ,API_VariablesCmdLine
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_API_VariablesCmdLine]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TAPI_VariablesCmdLine(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TAPIBase', 'TAPI_VariablesCmdLine') do
  with CL.AddClassN(CL.FindClass('TAPIBase'),'TAPI_VariablesCmdLine') do
  begin
    RegisterMethod('Function Exists( const VariableName : String) : Boolean');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_API_VariablesCmdLine(CL: TPSPascalCompiler);
begin
  SIRegister_TAPI_VariablesCmdLine(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_TAPI_VariablesCmdLine(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TAPI_VariablesCmdLine) do
  begin
    RegisterMethod(@TAPI_VariablesCmdLine.Exists, 'Exists');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_API_VariablesCmdLine(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TAPI_VariablesCmdLine(CL);
end;

 
 
{ TPSImport_API_VariablesCmdLine }
(*----------------------------------------------------------------------------*)
procedure TPSImport_API_VariablesCmdLine.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_API_VariablesCmdLine(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_API_VariablesCmdLine.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_API_VariablesCmdLine(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
