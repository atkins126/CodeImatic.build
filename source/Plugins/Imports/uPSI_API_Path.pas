unit uPSI_API_Path;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_API_Path = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TAPI_Path(CL: TPSPascalCompiler);
procedure SIRegister_API_Path(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TAPI_Path(CL: TPSRuntimeClassImporter);
procedure RIRegister_API_Path(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   APIBase
  ,API_Output
  ,IOUtils
  ,API_Path
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_API_Path]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TAPI_Path(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TAPIBase', 'TAPI_Path') do
  with CL.AddClassN(CL.FindClass('TAPIBase'),'TAPI_Path') do
  begin
    RegisterMethod('Function Combine( const aPath1, aPath2 : string) : string');
    RegisterMethod('Function GetFullPath( const aPath : string) : string');
    RegisterMethod('Function GetFileName( const aFileName : string) : string');
    RegisterMethod('Function GetDirectoryName( aFileName : string) : string');
    RegisterMethod('Function GetExtension( const aFileName : string) : string');
    RegisterMethod('Function GetFileNameWithoutExtension( const aFileName : string) : string');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_API_Path(CL: TPSPascalCompiler);
begin
  SIRegister_TAPI_Path(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_TAPI_Path(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TAPI_Path) do
  begin
    RegisterMethod(@TAPI_Path.Combine, 'Combine');
    RegisterMethod(@TAPI_Path.GetFullPath, 'GetFullPath');
    RegisterMethod(@TAPI_Path.GetFileName, 'GetFileName');
    RegisterMethod(@TAPI_Path.GetDirectoryName, 'GetDirectoryName');
    RegisterMethod(@TAPI_Path.GetExtension, 'GetExtension');
    RegisterMethod(@TAPI_Path.GetFileNameWithoutExtension, 'GetFileNameWithoutExtension');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_API_Path(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TAPI_Path(CL);
end;

 
 
{ TPSImport_API_Path }
(*----------------------------------------------------------------------------*)
procedure TPSImport_API_Path.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_API_Path(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_API_Path.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_API_Path(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
