unit uPSI_API_Shell;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_API_Shell = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TAPI_Shell(CL: TPSPascalCompiler);
procedure SIRegister_API_Shell(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TAPI_Shell(CL: TPSRuntimeClassImporter);
procedure RIRegister_API_Shell(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   APIBase
  ,NovusShell
  ,API_Shell
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_API_Shell]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TAPI_Shell(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TAPIBase', 'TAPI_Shell') do
  with CL.AddClassN(CL.FindClass('TAPIBase'),'TAPI_Shell') do
  begin
    RegisterMethod('Function RunCaptureCommand( const aCommandLine : string; var aOutput : string) : Integer');
    RegisterMethod('Function RunCommandSilent( const aFilename : String; const aDirectory : string; const aParameters : String) : Integer');
    RegisterMethod('Function RunCommand( const aFilename : String; const aDirectory : string; const aParameters : String) : Integer');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_API_Shell(CL: TPSPascalCompiler);
begin
  SIRegister_TAPI_Shell(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_TAPI_Shell(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TAPI_Shell) do
  begin
    RegisterMethod(@TAPI_Shell.RunCaptureCommand, 'RunCaptureCommand');
    RegisterMethod(@TAPI_Shell.RunCommandSilent, 'RunCommandSilent');
    RegisterMethod(@TAPI_Shell.RunCommand, 'RunCommand');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_API_Shell(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TAPI_Shell(CL);
end;

 
 
{ TPSImport_API_Shell }
(*----------------------------------------------------------------------------*)
procedure TPSImport_API_Shell.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_API_Shell(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_API_Shell.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_API_Shell(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
