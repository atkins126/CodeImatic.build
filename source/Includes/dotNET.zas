unit dotNET;

interface


function GetDotNETFrameworkDirectory(aVersion: string): string;
   
implementation

function GetDotNETFrameworkDirectory(aVersion: string): string;
begin
   if (CompareText(lowercase(aVersion), '2') = 0) or
      (CompareText(lowercase(aVersion), '2.0') = 0) then
     begin
      if Registry.KeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\ASP.NET\2.0.50727.0') then
        Result := Registry.ReadString( HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\ASP.NET\2.0.50727.0', 'Path');
     end
  else 
  if (CompareText(lowercase(aVersion), '3.5') = 0) then
    begin
      if Registry.KeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v3.5') then
         Result := Registry.ReadString( HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v3.5', 'InstallPath');
    end
  else
  if (CompareText(lowercase(aVersion), '4') = 0) or
     (CompareText(lowercase(aVersion), '4.0') = 0) or
     (CompareText(lowercase(aVersion), '4.5') = 0) then
     begin
       if Registry.KeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full') then
         Result := Registry.ReadString( HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full', 'InstallPath');
     end
  else 
    RaiseException(erCustomError, 'Unsupported version ("2.0", "3.0", "3.5", "4.0", "4.5")');   
   

  result := File.IncludeTrailingPathDelimiter(result);

  if not Folder.Exists(result) then RaiseException(erCustomError, '.NET Framework not installed: '+result);
 
 
 
  


  
end;


(*

C:\Windows\Microsoft.NET\Framework\v2.0.50727\MSBuild.exe
C:\Windows\Microsoft.NET\Framework\v3.5\MSBuild.exe

C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe
C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe
*)

(*
public static string GetFrameworkDirectory()
{
  // This is the location of the .Net Framework Registry Key
  string framworkRegPath = @"Software\Microsoft\.NetFramework";

  // Get a non-writable key from the registry
  RegistryKey netFramework = Registry.LocalMachine.OpenSubKey(framworkRegPath, false);

  // Retrieve the install root path for the framework
  string installRoot = netFramework.GetValue("InstallRoot").ToString();

  // Retrieve the version of the framework executing this program
  string version = string.Format(@"v{0}.{1}.{2}\",
    Environment.Version.Major, 
    Environment.Version.Minor,
    Environment.Version.Build); 

  // Return the path of the framework
  return System.IO.Path.Combine(installRoot, version);     
}
*)



end.