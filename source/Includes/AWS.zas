unit AWS;

interface

Const
  aws_credentials = 'credentials';
  aws_config = 'config';


function IsAWSCliConfigured: Boolean;
function GetAWSCliConfigPath: String;

implementation

function IsAWSCliConfigured: Boolean;
Var
  fsaws_access_key_id: String;
  fsaws_secret_access_key: String;
  fsaws_region: String;
begin
  Result := False;

  if not Folder.Exists(GetAWSCliConfigPath) then
    begin
      RaiseException(erCustomError, 'AWSCli Configured path [' + GetAWSCliConfigPath +'] cannot not be found.');

      Exit;
    end;

  if Not File.Exists(GetAWSCliConfigPath + aws_credentials) then
    begin
      RaiseException(erCustomError, 'AWSCli Configured file cannot not be found.');

      Exit;
    end;

  fsaws_access_key_id := IniFile.ReadString(GetAWSCliConfigPath + aws_credentials,
                                'default', 'aws_access_key_id');
  fsaws_secret_access_key := IniFile.ReadString(GetAWSCliConfigPath + aws_credentials,
                                'default', 'aws_secret_access_key');


  // Config
  if File.Exists(GetAWSCliConfigPath + aws_config) then
    begin
      fsaws_region := IniFile.ReadString(GetAWSCliConfigPath + aws_config,
                                'default', 'region');

    end;

  if (Trim(fsaws_access_key_id) <> '') or (Trim(fsaws_secret_access_key) <> '') then
    Result := true;

end;

function GetAWSCliConfigPath: String;
begin
  Result := File.IncludeTrailingPathDelimiter(WinAPI.GetSpecialFolder(CSIDL_PROFILE) + '\.aws');
end;


end.
